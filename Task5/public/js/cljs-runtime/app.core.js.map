{"version":3,"sources":["app/core.cljs"],"mappings":";AAKA,AAAKA,kBACH,gDAAA,mFAAA,MAAA,SAAA,QAAA,1JAACC;AAEH,kBAAA,lBAAMC,4CAAQC,cAAcC;AAA5B,AAAA,0FAAA,0EAAA,mFAAA,kDAAA,2CAAA,uDAAA,2CAAA,iFAAA,uDAAA,sBAAA,mFAAA,yDAAA,2CAAA,uDAAA,2CAAA,iDAAA,KAAA,uEAAA,+CAAA,KAAA,yDAAA,QAAA,oEAAA,IAAA,xrBAE0B,CAAA,QAAOD,2dAEP,CAAA,OAAMA,gQAIJC;;AAE5B,yBAAA,zBAAMC;AAAN,AACE,IAAMC,MAAO,YAAA,ZAACC;AAAD,AACE,OAACC,mDAAMR,gBACA,WAAKS;AAAL,AACE,uGAAA,hGAACC,+CAAO,eAAA,AAAAC,fAACC,+BAAMZ,qGAAS,gBAAA,AAAAW,hBAACE,gCAAOb;;GAH3C;AAAb,AAIE;AAAA,AACE,IAAAc,WAAM,gBAAA,AAAAH,hBAACE,gCAAOb;AAAd,AAAA,QAAAc;KAAA;AACU,uBAAA,IAAA,pBAACZ;;;KADX;AAEa,uBAAA,MAAA,tBAACA;;;KAFd;AAGY,uBAAA,MAAA,tBAACA;;;;AAHb,MAAA,KAAAa,MAAA,CAAA,mEAAAD;;;;;AAMN;;;kBAAA,lBAAuBE;AAAvB,AAGE,wDAAA,jDAACC,oIAAaZ,+BACD,wBAAA,xBAAiBa;;AAEhC,gBAAA,hBAAMC;AAAN,AACE,YAAA,ZAACC;;AACD,OAACJ","names":["app.core/colors","reagent.core.atom","app.core/circle","step_position","color","app.core/app-container","upd","js/setInterval","cljs.core.swap_BANG_","_","cljs.core.concat","cljs.core/deref","cljs.core/rest","cljs.core/first","G__46402","js/Error","app.core/render","reagent.dom.render","js/document","app.core/main","js/console.log"],"sourcesContent":["(ns app.core\n  (:require\n   [reagent.dom :as rdom]\n   [reagent.core :as r]))\n\n(def colors\n  (r/atom [\"red\" \"yellow\" \"green\" \"yellow\"]))\n\n(defn circle [step_position color]\n  [:div.text-center\n   [:svg {:style {:height (+ 100 step_position) :width \"100\"}}\n    [:circle {:style {:cx \"50\"\n                      :cy (+ 50 step_position)\n                      :r \"40\"\n                      :stroke \"black\"\n                      :stroke-width \"3\"\n                      :fill color}}]]])\n\n(defn app-container []\n  (let [upd    (js/setInterval\n                #(swap! colors\n                        (fn [_]\n                          (concat (rest @colors) [(first @colors)]))) 2000)]\n    (fn []\n      (case (first @colors)\n        (\"red\") (circle 0 \"red\")\n        (\"yellow\") (circle 100 \"yellow\")\n        (\"green\") (circle 200 \"green\")))))\n\n\n(defn ^:dev/after-load render\n  \"Render the toplevel component for this app.\"\n  []\n  (rdom/render [app-container]\n               (.getElementById js/document \"app\")))\n\n(defn main []\n  (js/console.log \"MAIN FN Reloaded\")\n  (render))"]}